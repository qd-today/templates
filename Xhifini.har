[
    {
        "comment": "Unicode转换",
        "request": {
            "method": "POST",
            "url": "api://util/unicode",
            "headers": [],
            "cookies": [],
            "data": "html_unescape=false&content=invalid"
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                },
                {
                    "re": "\"状态\": \"200\"",
                    "from": "content"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "s",
                    "re": "\"转换后\": \"(.*)\"",
                    "from": "content"
                }
            ]
        }
    },
    {
        "request": {
            "method": "GET",
            "url": "https://xhifini.com/member.php?mod=logging&action=login",
            "headers": [
                {
                    "name": "Referer",
                    "value": "https://xhifini.com/member.php?mod=logging&action=login"
                }
            ],
            "cookies": [],
            "data": ""
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "idhash",
                    "re": "seccode_([A-Za-z0-9]+)",
                    "from": "content"
                },
                {
                    "name": "formhash",
                    "re": "name=\"formhash\" value=\"(.+)\"",
                    "from": "content"
                },
                {
                    "name": "loginhash",
                    "re": "loginhash=(.+)\"",
                    "from": "content"
                }
            ]
        }
    },
    {
        "comment": "While 循环开始",
        "request": {
            "method": "GET",
            "url": "{% while int(loop_index0) < 10 and s == \"invalid\" %}",
            "headers": [],
            "cookies": [],
            "data": ""
        },
        "rule": {
            "success_asserts": [],
            "failed_asserts": [],
            "extract_variables": []
        }
    },
    {
        "request": {
            "method": "GET",
            "url": "https://xhifini.com/misc.php?mod=seccode&action=update&idhash={{idhash|urlencode}}&{{random(0,1,16)|urlencode}}=&modid=member%3A%3Alogging",
            "headers": [
                {
                    "name": "Referer",
                    "value": "https://xhifini.com/member.php?mod=logging&action=login"
                }
            ],
            "cookies": [],
            "data": ""
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "sec",
                    "re": "updateseccode.*src=\"(.+?)\"",
                    "from": "content"
                }
            ]
        }
    },
    {
        "request": {
            "method": "GET",
            "url": "https://xhifini.com/{{sec}}",
            "headers": [
                {
                    "name": "Referer",
                    "value": "https://xhifini.com/member.php?mod=logging&action=login"
                }
            ],
            "cookies": [],
            "data": ""
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "sec",
                    "re": ".*",
                    "from": "content"
                }
            ]
        }
    },
    {
        "comment": "OCR识别",
        "request": {
            "method": "POST",
            "url": "api://util/dddd/ocr",
            "headers": [
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "cookies": [],
            "data": "{\"img\":\"{{sec}}\",\"imgurl\":\"\",\"old\":\"False\",\"extra_onnx_name\":\"\"}"
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                },
                {
                    "re": "\"状态\": \"OK\"",
                    "from": "content"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "sec",
                    "re": "\"Result\": \"(.*)\"",
                    "from": "content"
                }
            ]
        }
    },
    {
        "request": {
            "method": "GET",
            "url": "https://xhifini.com/misc.php?mod=seccode&action=check&inajax=1&modid=member%3A%3Alogging&idhash={{idhash|urlencode}}&secverify={{sec|urlencode}}",
            "headers": [
                {
                    "name": "Referer",
                    "value": "https://xhifini.com/member.php?mod=logging&action=login"
                },
                {
                    "name": "User-Agent",
                    "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0"
                }
            ],
            "cookies": [],
            "data": ""
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "s",
                    "re": "succeed",
                    "from": "content"
                }
            ]
        }
    },
    {
        "comment": "While 循环结束",
        "request": {
            "method": "GET",
            "url": "{% endwhile %}",
            "headers": [],
            "cookies": [],
            "data": ""
        },
        "rule": {
            "success_asserts": [],
            "failed_asserts": [],
            "extract_variables": []
        }
    },
    {
        "comment": "",
        "request": {
            "method": "POST",
            "url": "https://xhifini.com/member.php?mod=logging&action=login&loginsubmit=yes&loginhash={{loginhash|urlencode}}&inajax=1",
            "headers": [
                {
                    "name": "Origin",
                    "value": "https://xhifini.com"
                },
                {
                    "name": "Referer",
                    "value": "https://xhifini.com/member.php?mod=logging&action=login&referer=https%3A%2F%2F404zu.org%2Findex.php"
                }
            ],
            "cookies": [],
            "data": "formhash={{formhash}}&referer=https%3A%2F%2Fxhifini.com%2F.%2F&loginfield=username&username={{username}}&password={{password}}&questionid=0&answer=&seccodehash={{idhash}}&seccodemodid=member%3A%3Alogging&seccodeverify={{sec}}&cookietime=2592000"
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "欢迎您",
                    "from": "content"
                }
            ],
            "failed_asserts": [],
            "extract_variables": []
        }
    },
    {
        "comment": "",
        "request": {
            "method": "GET",
            "url": "https://xhifini.com",
            "headers": [
                {
                    "name": "Referer",
                    "value": "https://xhifini.com"
                }
            ],
            "cookies": [],
            "data": ""
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "points",
                    "re": "积分:\\s*(\\d+)",
                    "from": "content"
                }
            ]
        }
    },
    {
        "comment": "Unicode转换",
        "request": {
            "method": "POST",
            "url": "api://util/unicode",
            "headers": [],
            "cookies": [],
            "data": "html_unescape=false&content=\\r\\n积分: {{points}}"
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                },
                {
                    "re": "\"状态\": \"200\"",
                    "from": "content"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "__log__",
                    "re": "\"转换后\": \"(.*)\"",
                    "from": "content"
                }
            ]
        }
    }
]